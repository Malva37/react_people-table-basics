{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","api.ts","utils/preparePeopleArray.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PageItem/PageItem.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","PageNavLink","to","text","isActive","classNames","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","preparePeopleArray","peopleArray","map","person","mother","find","mom","name","motherName","father","dad","fatherName","Loader","PersonLink","slug","sex","PersonItem","born","died","useParams","personSlug","cn","PeopleTable","people","PeoplePage","useState","setPeople","isLoaderActive","setIsLoaderActive","isLoadingError","setIisLoadingError","fetchPeople","data","useEffect","length","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7ce8ee91.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      })}\n  >\n    {text}\n  </NavLink>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const preparePeopleArray = (peopleArray: Person[]) => {\n  return peopleArray.map(person => {\n    const mother = peopleArray.find(mom => mom.name === person.motherName);\n    const father = peopleArray.find(dad => dad.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n  const { personSlug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {(\n          mother\n            ? <PersonLink person={mother} />\n            : motherName || '-'\n        )}\n      </td>\n      <td>\n        {(\n          father\n            ? <PersonLink person={father} />\n            : fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonItem } from '../PageItem';\n\ntype Props = {\n  people: Person[],\n\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { preparePeopleArray } from '../../utils/preparePeopleArray';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isLoaderActive, setIsLoaderActive] = useState(true);\n  const [isLoadingError, setIisLoadingError] = useState(false);\n\n  const fetchPeople = async () => {\n    try {\n      let data = await getPeople();\n\n      data = preparePeopleArray(data);\n      setPeople(data);\n      setIsLoaderActive(false);\n    } catch {\n      setIisLoadingError(true);\n    } finally {\n      setIsLoaderActive(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoaderActive && <Loader />}\n\n      {isLoadingError && (\n        <p\n          data-cy=\"peopleLoadingError\"\n          className=\"has-text-danger\"\n        >\n          Something went wrong\n        </p>\n      )}\n\n      {people.length > 0 && (\n        <PeopleTable\n          people={people}\n        />\n      )}\n\n      {(people.length === 0 && !isLoaderActive) && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PageNavLink } from './components/PageNavLink';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n\n              <Route path=\"people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":personSlug\" element={<PeoplePage />} />\n              </Route>\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}